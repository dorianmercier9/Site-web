{
  "hash": "47738885c838fb33e817a9ec9aa33f6c",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: LES VARIABLES\n---\n\n\n\n![Variables Python](https://www.ontechplayground.com/wp-content/uploads/2021/01/python-variables.png)\n\n\n\nLes variables sont des conteneurs permettant de stocker des valeurs de données, telles que des nombres ou des chaînes de caractères.\n\n- Affectation **(=)**.\n- Python détermine automatiquement le type de données en fonction de la valeur attribuée.\n- Ecraser les valeurs des variables en les réaffectant.\n- Sensible à la casse : \"X\" et \"x\" sont deux variables différentes\n- Imprimer plusieurs variables dans une seule instruction print avec **(,)**\n- Plusieurs valeurs à plusieurs variables ou plusieurs variables à une seule valeur sur une seule ligne.\n- Dénomination des variables incluent :\n    - la casse camel : *testVariableCase*\n    - la casse Pascal : *TestVariableCase*\n    - la casse serpent : *test_variable_case*\n\n- Evitez de:\n    - commencer les noms de variables par des chiffres\n    - utiliser des symboles tels que des tirets ou des espaces\n    - mélanger des chaînes de caractères et des nombres entiers directement dans la concaténation.\n\n\n::: {#174cfac7 .cell execution_count=1}\n``` {.python .cell-code}\nx = 10\nprint(x)\ntype(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n10\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\nint\n```\n:::\n:::\n\n\n::: {#e52655a8 .cell execution_count=2}\n``` {.python .cell-code}\ny = \"carbonara\"\nprint(y)\ntype(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncarbonara\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\nstr\n```\n:::\n:::\n\n\n```{.python}\n# y != Y\nY = \"Pates à la carbonara\"\nprint(Y)\n```\nPates à la carbonara\n\n```{.python}\n# affectation de valeurs différentes\nx, y, z = \"Carbonara\", \"Bolognaise\", \"Pesto\"\nprint(x)\nprint(y)\nprint(z)\n```\nCarbonara\nBolognaise\nPesto\n\n```{.python}\n# affectation de la même valeur\nx = y = z = \"Carbonara\"\nprint(x)\nprint(y)\nprint(z)\n```\nCarbonara\nCarbonara\nCarbonara\n\n```{.python}\n# creation une liste et affectation\npates = []\npates = [\"Carbonara\", \"Bolognaise\", \"Pesto\"]\nx, y, z = pates\nprint(x)\nprint(y)\nprint(z)\n```\nCarbonara\nBolognaise\nPesto\n\n```{.python}\n# concatenation : seulement chaine de caractère ensemble\nx = \"Les pates à la \" + 'carbonara sont mes préférées'\nprint(x)\n```\nLes pates à la carbonara sont mes préférées\n\n```{.python}\nx = \"Les pates\"\ny = \"à la carbonara\"\nz = \"sont mes préférées\"\nprint(x, y, z)\n```\nLes pates à la carbonara sont mes préférées\n\n```{.python}\nx = 2\ny = 3\nz = 4\nprint(x+y+z)\n```\n9\n\n```{.python}\n# La f-string ? \n\nnom = \"Dubalcon\"\nprenom = \"Jean\"\nage = 55\n\nprint(f\"Bonjour, je m'appelle {prenom} {nom} et j'ai {age} ans.\")\n```\nBonjour, je m'appelle Jean Dubalcon et j'ai 55 ans.\n\n",
    "supporting": [
      "about_files"
    ],
    "filters": [],
    "includes": {}
  }
}